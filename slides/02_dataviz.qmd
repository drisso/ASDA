---
title: "Data visualization"
subtitle: "Advanced Statistics and Data Analysis"
author: "Davide Risso"
format: 
    revealjs:
        theme: default
---

# Introduction

## What is statistics

::: {.callout-important appearance="minimal"}
Statistics is the *art of making numerical conjectures* about puzzling questions.

Freedman et al., 1978.
:::

. . .

Statistics is the art and science of designing studies and analyzing the data that those studies produce.

. . .

Its ultimate goal is translating data into knowledge and understanding of the world around us.

. . .

In short, statistics is the art and science of learning from data.

## The role of statistics

-   **Design**: planning how to obtain data to answer the questions of interest.
-   **Description**: summarizing the data that are obtained.
-   **Inference**: making decisions and predictions based on the data.

## Sample and population

The **population** is the set of subjects in which we are interested.

The **sample** is the subset of the population for whom we have (or plan to have) data.

Examples:

-   Consumi Delle Famiglie (ISTAT). Sample: 28.000 families in all cities; population: all Italian families.
-   IPSOS exit polls. Sample: 1000 electors, population: all Italian relevant voters.
-   A census is a complete enumeration.

## Descriptive and Inferential Statistics

**Descriptive statistics** refers to methods for summarizing the data. The summaries usually consist of graphs and numbers such as averages and percentages.

. . .

**Inferential statistics** refers to methods for making predictions or decisions about a population, based on data obtained from a sample of that population.

. . .

::: callout-note
## Example: confidence intervals

Of 834 people in a survey, 54.0$\%$ say they favor handgun control. Using statistical methods, we infer that there is 95$\%$ confidence that the true proportion is between 50.6$\%$ and 57.4$\%$.
:::

# Graphical and numerical summaries

## Data

The *data* consist of one or more *variables* measured/recorded on *observational units* in a *population* (cf. census) or *sample* of the population of interest.

The term *variable* refers to characteristics that differ among observational units.

```{r}
library(gapminder)
head(gapminder)
```

## Variables

We usually distinguish the following two main types of variables.

-   Quantitative / Numerical.
-   Qualitative / Categorical.

## Quantitative Variables

Quantitative variables can be

-   *Continuous* (cf. real numbers): any value corresponding to the points in an interval. E.g. blood pressure, height.
-   *Discrete* (cf. integers): countable number of values. E.g. number of events per year.

## Qualitative variables

Qualitative variables can be

-   *Nominal*: names or labels, no natural order. E.g. Sex, ethnicity, eye color
-   *Ordinal*: ordered categories, no natural numerical scale. E.g. Muscle tone, tumor grade.

## Tidy data

The concept of tidy data was introduced by Hadley Wickham in his seminal paper (Wickham, 2014).

There are three fundamental rules which make a dataset tidy:

1.  Each variable must have its own column.
2.  Each observation must have its own row.
3.  Each value must have its own cell.

The advantage of tidy data is both conceptual and practical: it allows to have consistency between datasets and to use tools designed for this data structure.

## Distribution

The term *distribution* refers to the *frequencies* of one or more (quantitative or qualitative) *variables* recorded on units in a population or sample of interest.

A *distribution table* is a table of *absolute frequencies* (i.e., counts) or *relative frequencies* (i.e., percentages) for the values taken on by the variable(s) in the group of interest.

*Population distribution*: distribution of variables for units in a population; *population parameters*: functions, i.e., summaries, of the population distribution.

*Empirical/Sample distribution*: distribution of variables for units in a sample; *sample statistics*: functions, i.e., summaries, of the empirical distribution.

## Example: life expectancy

```{r, echo=TRUE}
gapminder
summary(gapminder$lifeExp)
```

## Numerical and graphical summaries

As illustrated by the previous example, it is often more informative to provide a *summary* of the data rather than to look at all of them.

Data summaries can be either numerical or graphical and allow us to:

-   Focus on the *main characteristics* of the data.
-   Reveal *unusual features* of the data.
-   Summarize *relationship between variables*.

## When do we need summaries?

::: incremental
-   **Exploration**: to help you better understand and discover hidden patterns in the data.
-   **Explanation**: to communicate insights to others.
:::

## Exploratory Data Analysis (EDA)

*Exploratory Data Analysis* (EDA) is a key step of any data analysis and of statistical practice in general.

Before formally modeling the data, the dataset must be examined to get a "first impression" of the data and to reveal expected and unexpected characteristics of the data.

It is also useful to examine the data for outlying observations and to check the plausibility of the assumptions of candidate statistical models.

## Communication of the results

*Explanatory plots* (and tables) are equally important. They are often done at the end of the analysis to communicate the results to others.

The main goal is to communicate your main findings:

-   focus the attention on the important part of the plot
-   make it easy to understand the information (colors, labels)

## Combining accuracy with aesthetics

A good visualization should be aesthetically pleasing.

However, the most important aspect of data visualization is **accuracy**: a graph should never be misleading and aesthetics should never come at the price of inaccuracy.

# How to visualize data

## A first example

Suppose that a bakery produces five different types of pie and that the sales of these pies in the last three months were:

| Type      | October | November | December |
|-----------|---------|----------|----------|
| Apple     | 75      | 90       | 98       |
| Cherry    | 45      | 51       | 67       |
| Blueberry | 20      | 30       | 45       |
| Cream     | 90      | 89       | 96       |
| Pumpkin   | 22      | 100      | 20       |

## A bad plot

```{r}
#| echo: false
#| warning: false
#| message: false

library(tidyverse)
library(ggokabeito)
library(scales)
library(ggrepel)

df <- data.frame(October = c(75, 45, 20, 90, 22),
                 November = c(90, 51, 30, 89, 100),
                 December = c(98, 67, 45, 96, 20),
                 type = c("Apple", "Cherry", "Blueberry", "Cream", "Pumpkin"))
df_long <- pivot_longer(df, cols=1:3, names_to = "month", values_to = "sales")

par(mfrow=c(1, 3))
pie(df$October, main = "October", col=c("red", "green", "yellow", "cyan", "blue"))
pie(df$November, main = "November", col=c("red", "green", "yellow", "cyan", "blue"))
pie(df$December, main = "December", col=c("red", "green", "yellow", "cyan", "blue"))
par(mfrow=c(1, 1))
```

## A differently bad plot

```{r}
#| echo: false

ggplot(df_long, aes(x = type, y = sales, fill = type)) +
    geom_bar(stat = "identity") +
    theme(axis.title = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())
```

## A better plot

```{r}
#| echo: false

ggplot(df_long, aes(x = type, y = sales, group = month, fill = month)) +
    geom_bar(stat = "identity", position = "dodge") +
    theme_minimal() +
    scale_fill_okabe_ito()
```

## A better plot

```{r}
#| echo: false

df_long$month <- factor(df_long$month, levels=c("October", "November", "December"))

df_long$type <- factor(df_long$type, levels=c("Cream", "Apple", "Cherry", "Pumpkin", "Blueberry"))

ggplot(df_long, aes(y = type, x = sales, group = rev(month), fill = month)) +
    geom_bar(stat = "identity", position = "stack") +
    theme_minimal(base_size = 20) +
    scale_fill_okabe_ito()
```

## A plot that chooses what to highlight

```{r}
#| echo: false

df_long$thanksgiving <- factor(ifelse(df_long$type=="Pumpkin", "yes", "no"), levels = c("yes", "no"))
df_long <- mutate(df_long, label = if_else(month == "December", as.character(type), NA_character_))

ggplot(df_long, aes(x = month, y = sales, group = type, color = thanksgiving)) +
    geom_line(size = 2) +
    geom_text_repel(aes(label = label), nudge_x = 0.1,
                  na.rm = TRUE, size = 8) +
    theme_minimal(base_size = 20) +
    theme(legend.position = "none") +
    scale_color_okabe_ito()
```
